{"version":3,"sources":["components/Search.js","components/Card.js","components/Results.js","components/Drink.js","App.js","serviceWorker.js","index.js"],"names":["Search","react_default","a","createElement","className","onSubmit","this","props","searchDrink","autoComplete","name","type","placeholder","React","Component","Card","onClick","event","preventDefault","selectDrink","idDrink","strDrink","alt","src","strDrinkThumb","Results","drinkArray","map","x","components_Card","key","Drink","drink","drinks","strInstructions","ingredients","Date","now","App","state","undefined","selectedDrink","_callee","e","drinkName","api_call","data","regenerator_default","wrap","_context","prev","next","target","elements","drinkText","value","fetch","concat","sent","json","console","log","_this","setState","stop","_callee2","id","measures","y","list","i","_context2","includes","push","match","length","components_Search","components_Results","components_Drink","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f5b271c7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Search extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"search\">\r\n        <form className=\"searchForm\" onSubmit={this.props.searchDrink}>\r\n          <input\r\n            autoComplete=\"off\"\r\n            className=\"searchInput\"\r\n            name=\"drinkText\"\r\n            type=\"text\"\r\n            placeholder=\"Search a Drink...\"\r\n          />\r\n          <button className=\"searchButton\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nconst Card = props => {\r\n  const openMe = event => {\r\n    event.preventDefault();\r\n    props.selectDrink(props.idDrink);\r\n  };\r\n  return (\r\n    <div className=\"card\" onClick={openMe}>\r\n      <div className=\"cardHeader\">{props.strDrink}</div>\r\n      <img className=\"cardImg\" alt=\"thumbnail\" src={props.strDrinkThumb} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nconst Results = props => {\r\n  return (\r\n    <div className=\"results\">\r\n      <div className=\"resultsHeader\" />\r\n      <div className={props.drinkArray ? \"cardList\" : \"cardListNull\"}>\r\n        {props.drinkArray &&\r\n          props.drinkArray.map(x => (\r\n            <Card\r\n              strDrink={x.strDrink}\r\n              strDrinkThumb={x.strDrinkThumb}\r\n              idDrink={x.idDrink}\r\n              selectDrink={props.selectDrink}\r\n              key={x.idDrink}\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\n\r\nconst Drink = props => {\r\n  const drink = props.drink && props.drink.drinks[0];\r\n  return (\r\n    <div className=\"drink\">\r\n      {props.drink && (\r\n        <div className=\"drinkBody\">\r\n          <div className=\"drinkHeader\">{drink.strDrink}</div>\r\n          <div className=\"drinkDirections\">{drink.strInstructions}</div>\r\n          <div className=\"drinkIngredients\">\r\n            <ul>\r\n              {props.ingredients.map(x => {\r\n                return <li key={Date.now() + x}>{x}</li>;\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Drink;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.scss\";\r\nimport Search from \"./components/Search\";\r\nimport Results from \"./components/Results\";\r\nimport Drink from \"./components/Drink\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    drinkArray: [],\r\n    ingredients: undefined,\r\n    selectedDrink: undefined\r\n  };\r\n\r\n  searchDrink = async e => {\r\n    e.preventDefault();\r\n\r\n    const drinkName = e.target.elements.drinkText.value;\r\n\r\n    const api_call = await fetch(\r\n      `https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${drinkName}`\r\n    );\r\n\r\n    const data = await api_call.json();\r\n\r\n    console.log(data.drinks);\r\n    this.setState({\r\n      drinkArray: data.drinks\r\n    });\r\n  };\r\n\r\n  selectDrink = async id => {\r\n    console.log(id);\r\n\r\n    const api_call = await fetch(\r\n      `https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`\r\n    );\r\n\r\n    const data = await api_call.json();\r\n\r\n    console.log(data);\r\n\r\n    let ingredients = [];\r\n    let measures = [];\r\n    for (var x in data.drinks[0]) {\r\n      if (x.includes(\"strIngredient\")) {\r\n        if (data.drinks[0][x] !== \"\" && data.drinks[0][x] !== null) {\r\n          ingredients.push(data.drinks[0][x]);\r\n        }\r\n      }\r\n    }\r\n    for (var y in data.drinks[0]) {\r\n      if (y.includes(\"strMeasure\")) {\r\n        data.drinks[0][y] !== null && data.drinks[0][y].match(/[a-z]/i)\r\n          ? measures.push(\"- \" + data.drinks[0][y])\r\n          : measures.push(\" \");\r\n      }\r\n    }\r\n\r\n    const list = [];\r\n    for (var i = 0; i < ingredients.length; i++) {\r\n      list.push(ingredients[i] + \" \" + measures[i]);\r\n    }\r\n    this.setState({\r\n      selectedDrink: data,\r\n      ingredients: list\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Search searchDrink={this.searchDrink} />\r\n        <Results\r\n          drinkArray={this.state.drinkArray}\r\n          selectDrink={this.selectDrink}\r\n        />\r\n        <Drink\r\n          drink={this.state.selectedDrink}\r\n          ingredients={this.state.ingredients}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}